using System.Security.Cryptography;

namespace BikeService.Data;

public static class Utility
{
    private const char _segmentDelimiter = ':';
    // This method accepts a string as input and returns a hash of that string as well as some metadata. 
    public static string HashSecret(string input)
    {
        var saltSize = 16;
        var iterations = 100_000;
        var keySize = 32;
        HashAlgorithmName algorithm = HashAlgorithmName.SHA256;
        byte[] salt = RandomNumberGenerator.GetBytes(saltSize);
        byte[] hash = Rfc2898DeriveBytes.Pbkdf2(input, salt, iterations, algorithm, keySize);

        return string.Join(
            _segmentDelimiter,
            Convert.ToHexString(hash),
            Convert.ToHexString(salt),
            iterations,
            algorithm
        );
    }
    /*This method accepts an input string and a hash string (generated by the HashSecret method)
    and returns a boolean that indicates whether the input matches the hash*/
    public static bool VerifyHash(string input, string hashString)
    {
        string[] segments = hashString.Split(_segmentDelimiter);
        byte[] hash = Convert.FromHexString(segments[0]);
        byte[] salt = Convert.FromHexString(segments[1]);
        int iterations = int.Parse(segments[2]);
        HashAlgorithmName algorithm = new(segments[3]);
        byte[] inputHash = Rfc2898DeriveBytes.Pbkdf2(
            input,
            salt,
            iterations,
            algorithm,
            hash.Length
        );

        return CryptographicOperations.FixedTimeEquals(inputHash, hash);
    }
    // This method returns the full path to the directory where the application's data is stored.
    public static string GetAppDirectoryPath()
    {
        return Path.Combine(
            Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData),
            "BikeService"
        );
    }
    // This method returns the full path to the file where the application stores its user data.
    public static string GetAppUsersFilePath()
    {
        return Path.Combine(GetAppDirectoryPath(), "users.json");
    }
    // This method returns the full path to the file where the application stores its Inventory data.
    public static string GetInventoryFilePath()
    {
        return Path.Combine(GetAppDirectoryPath(), "inventory.json");
    }
    // This method returns the full path to the file where the application stores its Inventory Log data.
    public static string GetInventoryLogFilePath()
    {
        return Path.Combine(GetAppDirectoryPath(), "inventoryLog.json");
    }
    // This method returns the full path to the file where the application stores its creation and deletion Log data.
    public static string GetLogFilePath()
    {
        return Path.Combine(GetAppDirectoryPath(), "log.json");
    }   
}
    