@page "/logs"
@using Log.Data
@using BikeService.Data

<nav class="navbar top-container">
    <h1 class="top-title">Creation and Deletion Logs</h1>
        <a class="btn btn-primary add-btn" href="/inventory">
        <span class="oi oi-arrow-left mx-1" /> Go Back
          </a>
</nav>
<table class="table main-table">
    <!-- Table header assignment. -->
    <thead>
        <tr class="table-head">
            <th>
                Item  <a class='btn-sort text-@(_sortBy == "itemName" ? "primary" : "secondary")' data-mdb-toggle="tooltip"
                         @onclick='()=>SortByHandler("itemName")'>
                    <span class='sort-logo oi oi-sort-@(_sortBy == "itemName" ? _sortDirection : "ascending")' />
                </a>
            </th>
            <th>Date</th>
            <th>Action Performed</th>
            <th>Action Performer</th>
        </tr>
    </thead>
    <!-- Table data assignment. -->
    <tbody class="table-body">
        @{
            
            IEnumerable<Log> logs = _logs;
  
            // Sort by item name.
            if (_sortBy == "itemName")
            {
                logs = _sortDirection == "ascending" ? logs.OrderBy(t => t.Item) : logs.OrderByDescending(t =>
                t.Item);
            }
              @foreach (var log in logs)
        {
            <tr class="table-row">
                <td>@log.Item</td>
                <td>@log.ItemDate.ToString("MMM dd, yyyy h:mm tt")</td>
                <td>@log.ActionPerformed</td>
                <td>
                    @{
                        var creator = UserManagement.GetById(log.ActionPerformer);
                            <span>@(creator == null ? "Unknown" : creator.Username)</span>
                    }
                    </td>
            </tr>
        }
        }
    </tbody>
        
      
</table>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private List<Log> _logs { get; set; }
    private string _sortBy = "itemName";
    private string _sortDirection = "ascending";
    protected override void OnInitialized()
    {
        _logs = LogManagement.GetAll();
    }

    private void SortByHandler(string sortByName)
    {
        if (_sortBy == sortByName)
        {
            _sortDirection = _sortDirection == "ascending" ? "descending" : "ascending";
        }
        else
        {
            _sortBy = sortByName;
            _sortDirection = "ascending";
        }
    }
}
